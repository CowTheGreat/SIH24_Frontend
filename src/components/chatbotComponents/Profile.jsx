import axios from "axios";
import { useState } from "react";
import PinInput from "react-pin-input"; // For the input of 6-digit codes
import QrCode from "../../assets/qr.png";
import userIcon from "../../assets/userIcon.png";
import Classes from "./Profile.module.css";

function Profile() {
  const [qrCode, setQrCode] = useState(""); // State to store QR code data
  const [showPopup, setShowPopup] = useState(false); // State for popup visibility
  const [pin, setPin] = useState(""); // State to store TOTP pin
  const [resultMessage, setResultMessage] = useState(""); // State for verification message

  const handleEnable2FA = async () => {
    setQrCode(QrCode); // Set the QR code to the state
    setShowPopup(true); // Show the popup
  };

  const handleClosePopup = () => {
    setShowPopup(false); // Close the popup
    setResultMessage(""); // Reset any previous messages
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post(
        "https://sih24-node-backend.onrender.com/verify",
        {
          token: pin,
        }
      );
      if (response.data.verified) {
        setResultMessage("Code verified successfully!");
        // Redirect to another page or perform any action after successful verification
      } else {
        setResultMessage("Invalid code! Please try again.");
      }
    } catch (error) {
      console.error("Error verifying code:", error);
      setResultMessage("An error occurred during verification.");
    }
  };

  return (
    <div className={Classes.profileContainer}>
      <h1>User Profile</h1>
      <div className={Classes.userInfo}>
        <div className={Classes.avatarContainer}>
          <img src={userIcon} className={Classes.avatar} alt="User avatar" />
          <div className={Classes.userName}>
            <h2>Akeel</h2>
            <p>akeel@gmail.com</p>
          </div>
        </div>
      </div>

      <div className={Classes.details}>
        <p>Full Name</p>
        <p>Akeel Ahamed R S</p>
      </div>
      <div className={Classes.details}>
        <p>E-Mail Address</p>
        <p>akeel@gmail.com</p>
      </div>
      <div className={Classes.details}>
        <p>Phone Number</p>
        <p>(656) 587 6589</p>
      </div>

      {/* Action Section */}
      <div className={Classes.actionSection}>
        <div className={Classes.actionBox1}>
          <div>
            <h3>Change Password</h3>
            <p>
              To reset your password, please click the reset Password button
            </p>
          </div>
          <button className={Classes.actionButton}>Reset Password</button>
        </div>
        <div className={Classes.actionBox2}>
          <h3>Enable Google Auth</h3>
          <p>
            To enable 2 Factor Authentication using Google Authenticator App,
            please click the Enable 2FA button
          </p>
          <button className={Classes.actionButton} onClick={handleEnable2FA}>
            Enable 2FA
          </button>
        </div>
      </div>

      {/* QR Code Popup with Validation */}
      {showPopup && (
        <div className={Classes.popup}>
          <div className={Classes.popupContent}>
            <h3>Scan the QR Code with Google Authenticator</h3>
            <img
              src={qrCode}
              alt="Google Authenticator QR Code"
              className={Classes.qrImage}
            />

            <form onSubmit={handleSubmit}>
              <label htmlFor="authCode">
                Enter the 6-digit authentication code generated by your app:
              </label>
              <PinInput
                length={6}
                focus
                type="numeric"
                inputMode="number"
                onChange={(value) => setPin(value)}
                className={Classes.pinInput}
              />
              <button type="submit" className={Classes.submitButton}>
                Verify Code
              </button>
            </form>

            {/* Display verification message */}
            {resultMessage && (
              <p className={Classes.resultMessage}>{resultMessage}</p>
            )}

            <button onClick={handleClosePopup} className={Classes.closeButton}>
              Close
            </button>
          </div>
        </div>
      )}

      {/* Sign Out Button */}
      <button className={Classes.signOutButton}>Sign out</button>
    </div>
  );
}
